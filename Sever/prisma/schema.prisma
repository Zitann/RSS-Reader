// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id                Int                 @id @default(autoincrement())
  username          String              @unique
  password          String
  email             String              @unique
  created_at        DateTime            @default(now())
  updated_at        DateTime            @updatedAt
  subscriptions     UserSubscription[]
  UserArticleStatus UserArticleStatus[]
}

model Tag {
  id         Int      @id @default(autoincrement())
  name       String   @unique
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model Feed {
  id              Int                @id @default(autoincrement())
  url             String             @unique
  title           String?
  description     String?
  image_url       String?
  last_build_date DateTime?
  ttl             Int?
  created_at      DateTime           @default(now())
  updated_at      DateTime           @updatedAt
  articles        Article[]
  users           UserSubscription[]
}

model UserSubscription {
  id         Int      @id @default(autoincrement())
  user       User     @relation(fields: [user_id], references: [id])
  user_id    Int
  feed       Feed     @relation(fields: [feed_id], references: [id])
  feed_id    Int
  is_active  Boolean  @default(true)
  tag_id     Int
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  @@unique([user_id, feed_id])
}

model Article {
  id           Int                 @id @default(autoincrement())
  feed         Feed                @relation(fields: [feed_id], references: [id])
  feed_id      Int
  title        String
  link         String
  description  String?
  content      String?
  published_at DateTime
  created_at   DateTime            @default(now())
  updated_at   DateTime            @updatedAt
  statuses     UserArticleStatus[]
}

model UserArticleStatus {
  id           Int      @id @default(autoincrement())
  user         User     @relation(fields: [user_id], references: [id])
  user_id      Int
  article      Article  @relation(fields: [article_id], references: [id])
  article_id   Int
  is_read      Boolean  @default(false)
  is_favorited Boolean  @default(false)
  created_at   DateTime @default(now())
  updated_at   DateTime @updatedAt

  @@unique([user_id, article_id])
}
